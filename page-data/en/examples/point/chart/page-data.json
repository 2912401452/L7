{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/en/examples/point/chart","result":{"data":{"site":{"siteMetadata":{"title":"L7","githubUrl":"https://github.com/antvis/L7","examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"官方精品库","en":"Featured"}},{"slug":"react","icon":"map","title":{"zh":"React 组件","en":"React Demo"}},{"slug":"point","icon":"point","title":{"zh":"点图层","en":"Point Layer"}},{"slug":"line","icon":"line","title":{"zh":"线图层","en":"Line Layer"}},{"slug":"polygon","icon":"polygon","title":{"zh":"面图层","en":"Polygon Layer"}},{"slug":"heatmap","icon":"heatmap","title":{"zh":"热力图","en":"HeatMap Layer"}},{"slug":"raster","icon":"raster","title":{"zh":"栅格图层","en":"Raster Layer"}},{"slug":"tutorial","icon":"map","title":{"zh":"教程示例","en":"Tutorial demo"}}],"playground":{"container":"<div style=\"min-height: 500px; justify-content: center;position: relative\" id=\"map\"/>","playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":{"@antv/l7":"latest","@antv/l7-maps":"latest"},"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"html":"","fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"html":"<p>介绍如何初始化一个第三方底图</p>","fields":{"slug":"/zh/examples/tutorial/map"},"frontmatter":{"title":"地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/map/index.zh.md"}}},{"node":{"html":"<p>how to  use L7 Initialize third-party maps</p>","fields":{"slug":"/en/examples/tutorial/map"},"frontmatter":{"title":"map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/map/index.en.md"}}},{"node":{"html":"<p><a href=\"https://github.com/antvis/L7\" target=\"_self\" rel=\"nofollow\"><img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Nk9mQ48ZoZMAAAAAAAAAAABkARQnAQ\" alt=\"github\"></a></p>","fields":{"slug":"/zh/examples/react/covid"},"frontmatter":{"title":"COVID-19 地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"react/covid/index.zh.md"}}},{"node":{"html":"<p><a href=\"https://github.com/antvis/L7\" target=\"_self\" rel=\"nofollow\"><img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Nk9mQ48ZoZMAAAAAAAAAAABkARQnAQ\" alt=\"github\"></a></p>","fields":{"slug":"/en/examples/react/covid"},"frontmatter":{"title":"COVID-19 Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"react/covid/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/raster/basic"},"frontmatter":{"title":"栅格图层","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"raster/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/raster/basic"},"frontmatter":{"title":"Raster Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"raster/basic/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/polygon/fill"},"frontmatter":{"title":"Choropleth Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/fill/index.en.md"}}},{"node":{"html":"<p>填充图，也叫分级统计图，指用一连串首尾闭合的点坐标对来表达的面图层，常用表达区域范围具有分类现象的面状分布。</p>","fields":{"slug":"/zh/examples/polygon/fill"},"frontmatter":{"title":"填充地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/fill/index.zh.md"}}},{"node":{"html":"<p>填充地图的增强实现，通过三维视角中的高度体现数据差异。</p>","fields":{"slug":"/zh/examples/polygon/3d"},"frontmatter":{"title":"3D填充图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/3d/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/polygon/3d"},"frontmatter":{"title":"Extrude Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"polygon/3d/index.en.md"}}},{"node":{"html":"<p>指地图上可用一个形状相同、大小和与其代表的数值成固定比率的圆点符号来定位的点图层，用于表达离散现象分布特征的地图。</p>","fields":{"slug":"/zh/examples/point/bubble"},"frontmatter":{"title":"气泡地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/bubble"},"frontmatter":{"title":"Bubble Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/path"},"frontmatter":{"title":"Path Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.en.md"}}},{"node":{"html":"<p>指需要用一连串首尾不闭合的点坐标对来定位的线图层，通常用来表示轨迹，线路，道路等</p>","fields":{"slug":"/zh/examples/line/path"},"frontmatter":{"title":"路径地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/heatmap/heatmap"},"frontmatter":{"title":"HeatMap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.en.md"}}},{"node":{"html":"<p>区域范围内数据具有的一定热度分级分布情况的聚合面状现象，常用于描述人群分布、密度和变化趋势等。</p>","fields":{"slug":"/zh/examples/heatmap/heatmap"},"frontmatter":{"title":"经典热力图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/animate"},"frontmatter":{"title":"动画","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/animate/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/animate"},"frontmatter":{"title":"Animate","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/animate/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/react/scene"},"frontmatter":{"title":"Scene 组件","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"react/scene/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/react/scene"},"frontmatter":{"title":"Scene Component","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"react/scene/index.en.md"}}},{"node":{"html":"<p>文本标注图层</p>\n<h2 id=\"使用\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8\" aria-label=\"使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用</h2>\n<h2 id=\"shape\" style=\"position:relative;\"><a href=\"#shape\" aria-label=\"shape permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>shape</h2>\n<ul>\n<li>text\n文本渲染需要将指定字段的shape设置成 text</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">layer<span class=\"token punctuation\">.</span><span class=\"token function\">shape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"color\" style=\"position:relative;\"><a href=\"#color\" aria-label=\"color permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>color</h2>\n<p> 同layer color</p>\n<h2 id=\"size\" style=\"position:relative;\"><a href=\"#size\" aria-label=\"size permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>size</h2>\n<p> 同layer size</p>\n<h2 id=\"style\" style=\"position:relative;\"><a href=\"#style\" aria-label=\"style permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>style</h2>\n<ul>\n<li>textAnchor: 'center', // 文本相对锚点的位置 center|left|right|top|bottom|top-left</li>\n<li>textOffset: [ 0, 0 ], // 文本相对锚点的偏移量 [水平, 垂直]</li>\n<li>spacing: 2, // 字符间距</li>\n<li>padding: [ 1, 1 ], // 文本包围盒 padding [水平，垂直]，影响碰撞检测结果，避免相邻文本靠的太近</li>\n<li>stroke: '#ffffff', // 描边颜色</li>\n<li>strokeWidth: 0.3, // 描边宽度</li>\n<li>strokeOpacity: 1.0</li>\n</ul>","fields":{"slug":"/en/examples/point/text"},"frontmatter":{"title":"label","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/text/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/scatter"},"frontmatter":{"title":"Scatter Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/point/text"},"frontmatter":{"title":"文本标注","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/text/index.zh.md"}}},{"node":{"html":"<p>指地图上可用一个形状大小相同的点状符号来定位，用表达离散现象分布特征的地图，如人口、农作物、动植物等的分布。</p>","fields":{"slug":"/zh/examples/point/scatter"},"frontmatter":{"title":"散点地图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/dot"},"frontmatter":{"title":"Dot Intensity","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/dot/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/point/dot"},"frontmatter":{"title":"亮度图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/dot/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/point/cluster"},"frontmatter":{"title":"聚合图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/cluster/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/cluster"},"frontmatter":{"title":"Cluster Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/cluster/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/arc"},"frontmatter":{"title":"Arc Line Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/arc/index.en.md"}}},{"node":{"html":"<p>将两个点的连线绘制成弧形，绘制的弧线可以是贝塞尔曲线，大圆航线，通常用来表示两种地理事物关系和联系，或者人口迁移，物流起点目的地等。</p>","fields":{"slug":"/zh/examples/line/arc"},"frontmatter":{"title":"弧线地图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/arc/index.zh.md"}}},{"node":{"html":"<p>热力图的变体，蜂窝布局呈现数据分级分布的聚合现象。</p>","fields":{"slug":"/zh/examples/heatmap/hexagon"},"frontmatter":{"title":"蜂窝热力图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/hexagon/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/heatmap/hexagon"},"frontmatter":{"title":"Hexagon Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/hexagon/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/heatmap/grid"},"frontmatter":{"title":"Grid Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/grid/index.en.md"}}},{"node":{"html":"<p>热力图的变体，网格布局呈现数据分级分布的聚合现象。</p>","fields":{"slug":"/zh/examples/heatmap/grid"},"frontmatter":{"title":"网格热力图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/grid/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/basic"},"frontmatter":{"title":"基础可视化","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/basic"},"frontmatter":{"title":"Featured","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/basic/index.en.md"}}},{"node":{"html":"<p>通过添加dom实现富文本地图标注</p>","fields":{"slug":"/zh/examples/tutorial/marker"},"frontmatter":{"title":"Marker","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/marker/index.zh.md"}}},{"node":{"html":"<p>add  Rich text  annotation  to scene</p>","fields":{"slug":"/en/examples/tutorial/marker"},"frontmatter":{"title":"control","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/marker/index.en.md"}}},{"node":{"html":"<p>How to use the map control</p>","fields":{"slug":"/en/examples/tutorial/control"},"frontmatter":{"title":"control","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/control/index.en.md"}}},{"node":{"html":"<p>如何使用组件</p>","fields":{"slug":"/zh/examples/tutorial/control"},"frontmatter":{"title":"组件","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"tutorial/control/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/react/layer"},"frontmatter":{"title":"Layer Component","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"react/layer/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/react/layer"},"frontmatter":{"title":"Layer 组件","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"react/layer/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/point/image"},"frontmatter":{"title":"符号地图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/image/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/image"},"frontmatter":{"title":"Symbol Map","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/image/index.en.md"}}},{"node":{"html":"<p>指需要用一连串首尾闭合相等数值点的连线的图层，表示连续分布且逐渐变化的数量特征的地图，常用于等高线图、等温线图等图。</p>","fields":{"slug":"/zh/examples/line/isoline"},"frontmatter":{"title":"等值线地图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/isoline/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/isoline"},"frontmatter":{"title":"Isoline Map","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/isoline/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/react/control"},"frontmatter":{"title":"Control 组件","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"react/control/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/react/control"},"frontmatter":{"title":"Control Component","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"react/control/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/point/column"},"frontmatter":{"title":"3D 柱状地图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"point/column/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/column"},"frontmatter":{"title":"Column Map","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"point/column/index.en.md"}}},{"node":{"html":"<p>使用二维统计图表代替点状符号的一种特殊复合形式，复合图表地图中常用扩展图形还有柱状图、曲线图、玫瑰图等</p>","fields":{"slug":"/zh/examples/point/chart"},"frontmatter":{"title":"复合图表地图","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"point/chart/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/chart"},"frontmatter":{"title":"Chart Map","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"point/chart/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/marker"},"frontmatter":{"title":"Custom Marker","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"point/marker/index.en.md"}}},{"node":{"html":"<p>可自定义点符号，通过自定义dom实现地图标注，富文本、动态点状符号都可用于地图上信息的标记。</p>","fields":{"slug":"/zh/examples/point/marker"},"frontmatter":{"title":"自定义 Marker","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"point/marker/index.zh.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"point/chart/demo/bar.js","absolutePath":"/Users/lizhengxue/Documents/AntV/github/l7-release/L7/examples/point/chart/demo/bar.js","order":0,"filename":"bar.js","title":"柱图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*6AR6Qq0Bq-MAAAAAAAAAAABkARQnAQ","source":"import { Scene, Marker } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\nimport * as G2 from '@antv/g2';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [ 2.6125016864608597, 49.359131 ],\n    pitch: 0,\n    zoom: 4.19\n  })\n});\nscene.on('loaded', () => {\n  addChart();\n  scene.render();\n});\nfunction addChart() {\n  fetch(\n    'https://gw.alipayobjects.com/os/basement_prod/0b96cca4-7e83-449a-93d0-2a77053e74ab.json'\n  )\n    .then(res => res.json())\n    .then(data => {\n      data.nodes.forEach(function(item) {\n        const el = document.createElement('div');\n        const total =\n          item.gdp.Agriculture + item.gdp.Industry + item.gdp.Service;\n\n        const size = Math.min(parseInt(total / 30000, 10), 70);\n        if (size < 30) {\n          return;\n        }\n        const itemData = [\n          {\n            item: 'Agriculture',\n            count: item.gdp.Agriculture,\n            percent: item.gdp.Agriculture / total\n          },\n          {\n            item: 'Industry',\n            count: item.gdp.Industry,\n            percent: item.gdp.Industry / total\n          },\n          {\n            item: 'Service',\n            count: item.gdp.Service,\n            percent: item.gdp.Service / total\n          }\n        ];\n\n        const chart = new G2.Chart({\n          container: el,\n          width: size,\n          height: size,\n          render: 'svg',\n          padding: 0\n        });\n        chart.legend(false);\n        chart.source(itemData);\n        chart.tooltip(false);\n        chart.axis('count', {\n          grid: false\n        });\n        chart\n          .interval()\n          .position('item*count')\n          .color('item', [ '#5CCEA1', '#5D7092', '#5B8FF9' ])\n          .opacity(1);\n        chart.render();\n        const marker = new Marker({\n          element: el\n        }).setLnglat({\n          lng: item.coordinates[0],\n          lat: item.coordinates[1]\n        });\n        scene.addMarker(marker);\n      });\n    });\n}\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7\", \"@antv/l7-maps\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7\"), require(\"@antv/l7-maps\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7, global.l7Maps, global.g2);\n    global.bar = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l, _l7Maps, G2) {\n  \"use strict\";\n\n  G2 = _interopRequireWildcard(G2);\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var scene = new _l.Scene({\n    id: 'map',\n    map: new _l7Maps.GaodeMap({\n      style: 'light',\n      center: [2.6125016864608597, 49.359131],\n      pitch: 0,\n      zoom: 4.19\n    })\n  });\n  scene.on('loaded', function () {\n    addChart();\n    scene.render();\n  });\n\n  function addChart() {\n    fetch('https://gw.alipayobjects.com/os/basement_prod/0b96cca4-7e83-449a-93d0-2a77053e74ab.json').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      data.nodes.forEach(function (item) {\n        var el = document.createElement('div');\n        var total = item.gdp.Agriculture + item.gdp.Industry + item.gdp.Service;\n        var size = Math.min(parseInt(total / 30000, 10), 70);\n\n        if (size < 30) {\n          return;\n        }\n\n        var itemData = [{\n          item: 'Agriculture',\n          count: item.gdp.Agriculture,\n          percent: item.gdp.Agriculture / total\n        }, {\n          item: 'Industry',\n          count: item.gdp.Industry,\n          percent: item.gdp.Industry / total\n        }, {\n          item: 'Service',\n          count: item.gdp.Service,\n          percent: item.gdp.Service / total\n        }];\n        var chart = new G2.Chart({\n          container: el,\n          width: size,\n          height: size,\n          render: 'svg',\n          padding: 0\n        });\n        chart.legend(false);\n        chart.source(itemData);\n        chart.tooltip(false);\n        chart.axis('count', {\n          grid: false\n        });\n        chart.interval().position('item*count').color('item', ['#5CCEA1', '#5D7092', '#5B8FF9']).opacity(1);\n        chart.render();\n        var marker = new _l.Marker({\n          element: el\n        }).setLnglat({\n          lng: item.coordinates[0],\n          lat: item.coordinates[1]\n        });\n        scene.addMarker(marker);\n      });\n    });\n  }\n});"},{"relativePath":"point/chart/demo/chart.js","absolutePath":"/Users/lizhengxue/Documents/AntV/github/l7-release/L7/examples/point/chart/demo/chart.js","order":1,"filename":"chart.js","title":"环图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*X06uT50Ll7QAAAAAAAAAAABkARQnAQ","source":"import { Scene, Marker } from '@antv/l7';\nimport { GaodeMap } from '@antv/l7-maps';\nimport * as G2 from '@antv/g2';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new GaodeMap({\n    style: 'light',\n    center: [ 2.6125016864608597, 49.359131 ],\n    pitch: 0,\n    zoom: 4.19\n  })\n});\nscene.on('loaded', () => {\n  addChart();\n  scene.render();\n});\nfunction addChart() {\n  fetch(\n    'https://gw.alipayobjects.com/os/basement_prod/0b96cca4-7e83-449a-93d0-2a77053e74ab.json'\n  )\n    .then(res => res.json())\n    .then(data => {\n      data.nodes.forEach(function(item) {\n        const el = document.createElement('div');\n        const total =\n          item.gdp.Agriculture + item.gdp.Industry + item.gdp.Service;\n\n        const size = Math.min(parseInt(total / 30000, 10), 70);\n        if (size < 30) {\n          return;\n        }\n        const itemData = [\n          {\n            item: 'Agriculture',\n            count: item.gdp.Agriculture,\n            percent: item.gdp.Agriculture / total\n          },\n          {\n            item: 'Industry',\n            count: item.gdp.Industry,\n            percent: item.gdp.Industry / total\n          },\n          {\n            item: 'Service',\n            count: item.gdp.Service,\n            percent: item.gdp.Service / total\n          }\n        ];\n\n        const sliceNumber = 0.02;\n\n        // 自定义 other 的图形，增加两条线\n        G2.Shape.registerShape('interval', 'sliceShape', {\n          draw: function draw(cfg, container) {\n            const points = cfg.points;\n            let path = [];\n            path.push([ 'M', points[0].x, points[0].y ]);\n            path.push([ 'L', points[1].x, points[1].y - sliceNumber ]);\n            path.push([ 'L', points[2].x, points[2].y - sliceNumber ]);\n            path.push([ 'L', points[3].x, points[3].y ]);\n            path.push('Z');\n            path = this.parsePath(path);\n            return container.addShape('path', {\n              attrs: {\n                fill: cfg.color,\n                path\n              }\n            });\n          }\n        });\n\n        const chart = new G2.Chart({\n          container: el,\n          width: size,\n          height: size,\n          render: 'svg',\n          padding: 0\n        });\n        chart.legend(false);\n        chart.source(itemData);\n        chart.coord('theta', {\n          innerRadius: 0.6\n        });\n        chart.tooltip(false);\n        chart\n          .intervalStack()\n          .position('percent')\n          .color('item', [ '#5CCEA1', '#5D7092', '#5B8FF9' ])\n          .shape('sliceShape');\n        chart.render();\n        const marker = new Marker({\n          element: el\n        }).setLnglat({\n          lng: item.coordinates[0],\n          lat: item.coordinates[1]\n        });\n        scene.addMarker(marker);\n      });\n    });\n}\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7\", \"@antv/l7-maps\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7\"), require(\"@antv/l7-maps\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7, global.l7Maps, global.g2);\n    global.chart = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l, _l7Maps, G2) {\n  \"use strict\";\n\n  G2 = _interopRequireWildcard(G2);\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var scene = new _l.Scene({\n    id: 'map',\n    map: new _l7Maps.GaodeMap({\n      style: 'light',\n      center: [2.6125016864608597, 49.359131],\n      pitch: 0,\n      zoom: 4.19\n    })\n  });\n  scene.on('loaded', function () {\n    addChart();\n    scene.render();\n  });\n\n  function addChart() {\n    fetch('https://gw.alipayobjects.com/os/basement_prod/0b96cca4-7e83-449a-93d0-2a77053e74ab.json').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      data.nodes.forEach(function (item) {\n        var el = document.createElement('div');\n        var total = item.gdp.Agriculture + item.gdp.Industry + item.gdp.Service;\n        var size = Math.min(parseInt(total / 30000, 10), 70);\n\n        if (size < 30) {\n          return;\n        }\n\n        var itemData = [{\n          item: 'Agriculture',\n          count: item.gdp.Agriculture,\n          percent: item.gdp.Agriculture / total\n        }, {\n          item: 'Industry',\n          count: item.gdp.Industry,\n          percent: item.gdp.Industry / total\n        }, {\n          item: 'Service',\n          count: item.gdp.Service,\n          percent: item.gdp.Service / total\n        }];\n        var sliceNumber = 0.02; // 自定义 other 的图形，增加两条线\n\n        G2.Shape.registerShape('interval', 'sliceShape', {\n          draw: function draw(cfg, container) {\n            var points = cfg.points;\n            var path = [];\n            path.push(['M', points[0].x, points[0].y]);\n            path.push(['L', points[1].x, points[1].y - sliceNumber]);\n            path.push(['L', points[2].x, points[2].y - sliceNumber]);\n            path.push(['L', points[3].x, points[3].y]);\n            path.push('Z');\n            path = this.parsePath(path);\n            return container.addShape('path', {\n              attrs: {\n                fill: cfg.color,\n                path: path\n              }\n            });\n          }\n        });\n        var chart = new G2.Chart({\n          container: el,\n          width: size,\n          height: size,\n          render: 'svg',\n          padding: 0\n        });\n        chart.legend(false);\n        chart.source(itemData);\n        chart.coord('theta', {\n          innerRadius: 0.6\n        });\n        chart.tooltip(false);\n        chart.intervalStack().position('percent').color('item', ['#5CCEA1', '#5D7092', '#5B8FF9']).shape('sliceShape');\n        chart.render();\n        var marker = new _l.Marker({\n          element: el\n        }).setLnglat({\n          lng: item.coordinates[0],\n          lat: item.coordinates[1]\n        });\n        scene.addMarker(marker);\n      });\n    });\n  }\n});"},{"relativePath":"point/chart/demo/ring.js","absolutePath":"/Users/lizhengxue/Documents/AntV/github/l7-release/L7/examples/point/chart/demo/ring.js","order":2,"filename":"ring.js","title":"环图","screenshot":"https://gw.alipayobjects.com/mdn/antv_site/afts/img/A*-oG0T64BnZoAAAAAAAAAAABkARQnAQ","source":"import { Scene, Marker } from '@antv/l7';\nimport { Mapbox } from '@antv/l7-maps';\nimport * as G2 from '@antv/g2';\n\nconst CSS = `.l7-marker .g2-guide-html {\n  width: 50px;\n  height: 50px;\n  vertical-align: middle;\n  text-align: center;\n  line-height: 0.1\n}\n\nl7-marker .g2-guide-html .title {\n  font-size: 12px;\n  color: #8c8c8c;\n  font-weight: 300;\n}\n\nl7-marker .g2-guide-html .value {\n  font-size: 18px;\n  color: #000;\n  font-weight: bold;\n}\n`;\nfunction loadCssCode(code) {\n  const style = document.createElement('style');\n  style.type = 'text/css';\n  style.rel = 'stylesheet';\n  // for Chrome Firefox Opera Safari\n  style.appendChild(document.createTextNode(code));\n  // for IE\n  // style.styleSheet.cssText = code;\n  const head = document.getElementsByTagName('head')[0];\n  head.appendChild(style);\n}\nloadCssCode(CSS);\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    pitch: 0,\n    style: 'dark',\n    center: [ 52.21496184144132, 24.121126851768906 ],\n    zoom: 3.802\n  })\n});\nscene.on('loaded', () => {\n  addChart();\n});\nscene.render();\nfunction addChart() {\n  Promise.all([\n    fetch(\n      'https://gw.alipayobjects.com/os/basement_prod/5b772136-a1f4-4fc5-9a80-9f9974b4b182.json'\n    ).then(d => d.json()),\n    fetch(\n      'https://gw.alipayobjects.com/os/basement_prod/f3c467a4-9ae0-4f08-bb5f-11f9c869b2cb.json'\n    ).then(d => d.json())\n  ]).then(function onLoad([ center, population ]) {\n    const popobj = {};\n    population.forEach(element => {\n      popobj[element.Code] =\n        element['Population, female (% of total) (% of total)'];\n    });\n    // 数据绑定\n\n    center.features = center.features.map(fe => {\n      fe.properties.female = popobj[fe.properties.id] * 1 || 0;\n      return fe;\n    });\n    center.features.forEach(point => {\n      const el = document.createElement('div');\n      const coord = point.geometry.coordinates;\n      const v = point.properties.female * 1;\n      if (v < 1 || (v > 46 && v < 54)) {\n        return;\n      }\n      const size = 60;\n      const data = [\n        {\n          type: '男性',\n          value: 100.0 - v.toFixed(2)\n        },\n        {\n          type: '女性',\n          value: v.toFixed(2) * 1\n        }\n      ];\n      const chart = new G2.Chart({\n        container: el,\n        width: size,\n        height: size,\n        render: 'svg',\n        padding: 0\n      });\n      chart.source(data);\n      chart.legend(false);\n      chart.tooltip(false);\n      chart.coord('theta', {\n        radius: 0.9,\n        innerRadius: 0.6\n      });\n      chart\n        .intervalStack()\n        .position('value')\n        .color('type', [ '#5CCEA1', '#5B8FF9' ])\n        .opacity(1);\n      chart.render();\n      const marker = new Marker({ element: el }).setLnglat({\n        lng: coord[0],\n        lat: coord[1]\n      });\n      scene.addMarker(marker);\n    });\n  });\n}\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7\", \"@antv/l7-maps\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7\"), require(\"@antv/l7-maps\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7, global.l7Maps, global.g2);\n    global.ring = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l, _l7Maps, G2) {\n  \"use strict\";\n\n  G2 = _interopRequireWildcard(G2);\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\n  function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var CSS = \".l7-marker .g2-guide-html {\\n  width: 50px;\\n  height: 50px;\\n  vertical-align: middle;\\n  text-align: center;\\n  line-height: 0.1\\n}\\n\\nl7-marker .g2-guide-html .title {\\n  font-size: 12px;\\n  color: #8c8c8c;\\n  font-weight: 300;\\n}\\n\\nl7-marker .g2-guide-html .value {\\n  font-size: 18px;\\n  color: #000;\\n  font-weight: bold;\\n}\\n\";\n\n  function loadCssCode(code) {\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    style.rel = 'stylesheet'; // for Chrome Firefox Opera Safari\n\n    style.appendChild(document.createTextNode(code)); // for IE\n    // style.styleSheet.cssText = code;\n\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n  }\n\n  loadCssCode(CSS);\n  var scene = new _l.Scene({\n    id: 'map',\n    map: new _l7Maps.Mapbox({\n      pitch: 0,\n      style: 'dark',\n      center: [52.21496184144132, 24.121126851768906],\n      zoom: 3.802\n    })\n  });\n  scene.on('loaded', function () {\n    addChart();\n  });\n  scene.render();\n\n  function addChart() {\n    Promise.all([fetch('https://gw.alipayobjects.com/os/basement_prod/5b772136-a1f4-4fc5-9a80-9f9974b4b182.json').then(function (d) {\n      return d.json();\n    }), fetch('https://gw.alipayobjects.com/os/basement_prod/f3c467a4-9ae0-4f08-bb5f-11f9c869b2cb.json').then(function (d) {\n      return d.json();\n    })]).then(function onLoad(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          center = _ref2[0],\n          population = _ref2[1];\n\n      var popobj = {};\n      population.forEach(function (element) {\n        popobj[element.Code] = element['Population, female (% of total) (% of total)'];\n      }); // 数据绑定\n\n      center.features = center.features.map(function (fe) {\n        fe.properties.female = popobj[fe.properties.id] * 1 || 0;\n        return fe;\n      });\n      center.features.forEach(function (point) {\n        var el = document.createElement('div');\n        var coord = point.geometry.coordinates;\n        var v = point.properties.female * 1;\n\n        if (v < 1 || v > 46 && v < 54) {\n          return;\n        }\n\n        var size = 60;\n        var data = [{\n          type: '男性',\n          value: 100.0 - v.toFixed(2)\n        }, {\n          type: '女性',\n          value: v.toFixed(2) * 1\n        }];\n        var chart = new G2.Chart({\n          container: el,\n          width: size,\n          height: size,\n          render: 'svg',\n          padding: 0\n        });\n        chart.source(data);\n        chart.legend(false);\n        chart.tooltip(false);\n        chart.coord('theta', {\n          radius: 0.9,\n          innerRadius: 0.6\n        });\n        chart.intervalStack().position('value').color('type', ['#5CCEA1', '#5B8FF9']).opacity(1);\n        chart.render();\n        var marker = new _l.Marker({\n          element: el\n        }).setLnglat({\n          lng: coord[0],\n          lat: coord[1]\n        });\n        scene.addMarker(marker);\n      });\n    });\n  }\n});"}]}}}}