"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint jsx-a11y/anchor-is-valid: 0 */
const gatsby_1 = require("gatsby");
const react_1 = __importStar(require("react"));
const react_use_1 = require("react-use");
const classnames_1 = __importDefault(require("classnames"));
const react_i18next_1 = require("react-i18next");
const antd_1 = require("antd");
const git_url_parse_1 = __importDefault(require("git-url-parse"));
const Search_1 = __importDefault(require("./Search"));
const Products_1 = __importDefault(require("./Products"));
const NavMenuItems_1 = __importDefault(require("./NavMenuItems"));
const antv_svg_1 = __importDefault(require("../images/antv.svg"));
const external_link_svg_1 = __importDefault(require("../images/external-link.svg"));
const Header_module_less_1 = __importDefault(require("./Header.module.less"));
exports.redirectToChinaMirror = (githubUrl) => {
    // antv.vision => antv.gitee.io
    if (window.location.host === 'antv.vision') {
        window.location.href = window.location.href.replace('antv.vision', 'antv.gitee.io');
        return;
    }
    // g2plot.antv.vision => antv-g2plot.gitee.io
    const match = window.location.host.match(/(.*)\.antv\.vision/);
    if (match && match[1]) {
        window.location.href = window.location.href.replace(window.location.host, `antv-${match[1]}.gitee.io`);
        return;
    }
    const { name } = git_url_parse_1.default(githubUrl);
    if (!name.includes('.') && !name.includes('-')) {
        window.location.href = window.location.href.replace(window.location.host, `antv-${name}.gitee.io`);
        return;
    }
    antd_1.message.info('镜像本地调试暂时无法跳转。');
};
const Header = ({ subTitle = '', subTitleHref, pathPrefix = '', path = '', navs = [], showSearch = true, showGithubCorner = true, showLanguageSwitcher = true, logo, onLanguageChange, siteUrl, githubUrl = 'https://github.com/antvis', defaultLanguage, Link = 'a', transparent, isHomePage, rootDomain = '', showChinaMirror = false, }) => {
    const { t, i18n } = react_i18next_1.useTranslation();
    const lang = typeof defaultLanguage !== 'undefined'
        ? defaultLanguage
        : i18n.language || '';
    const SubTitleLink = (subTitleHref || '').startsWith('http') ? 'a' : Link;
    const [productMenuVisible, setProductMenuVisible] = react_1.useState(false);
    let productMenuHovering = false;
    const onProductMouseEnter = (e) => {
        productMenuHovering = true;
        e.persist();
        setTimeout(() => {
            if (e.target instanceof Element && e.target.matches(':hover')) {
                setProductMenuVisible(true);
            }
        }, 200);
    };
    const onProductMouseLeave = (e) => {
        e.persist();
        productMenuHovering = false;
        setTimeout(() => {
            if (productMenuHovering) {
                return;
            }
            setProductMenuVisible(false);
        }, 200);
    };
    const onToggleProductMenuVisible = () => {
        setProductMenuVisible(!productMenuVisible);
    };
    const [popupMenuVisible, setPopupMenuVisible] = react_1.useState(false);
    const onTogglePopupMenuVisible = () => {
        setPopupMenuVisible(!popupMenuVisible);
    };
    const { img, link } = {
        img: react_1.default.createElement(antv_svg_1.default, null),
        link: '',
        ...logo,
    };
    react_1.useEffect(() => {
        if (popupMenuVisible) {
            setPopupMenuVisible(false);
        }
    }, [path]);
    // 移动端下弹出菜单时，禁止页面滚动
    react_1.useEffect(() => {
        if (popupMenuVisible) {
            document.documentElement.style.overflow = 'hidden';
        }
        else {
            document.documentElement.style.overflow = '';
        }
        return () => {
            document.documentElement.style.overflow = '';
        };
    }, [popupMenuVisible]);
    const isWide = react_use_1.useMedia('(min-width: 767.99px)', true);
    const menuIcon = !isWide ? (react_1.default.createElement(antd_1.Icon, { type: "menu", className: Header_module_less_1.default.menuIcon, onClick: onTogglePopupMenuVisible })) : null;
    const productItemProps = isWide
        ? {
            onMouseEnter: onProductMouseEnter,
            onMouseLeave: onProductMouseLeave,
        }
        : {
            onClick: onToggleProductMenuVisible,
        };
    const { name } = git_url_parse_1.default(githubUrl);
    const chinaMirrorUrl = name ? `https://antv-${name}.gitee.io` : '';
    const menu = (react_1.default.createElement("ul", { className: classnames_1.default(Header_module_less_1.default.menu, {
            [Header_module_less_1.default.popup]: !isWide,
            [Header_module_less_1.default.popupHidden]: !popupMenuVisible,
        }) },
        navs && navs.length ? react_1.default.createElement(NavMenuItems_1.default, { navs: navs, path: path }) : null,
        showLanguageSwitcher && (react_1.default.createElement("li", null,
            react_1.default.createElement("a", { onClick: e => {
                    e.preventDefault();
                    const value = lang === 'en' ? 'zh' : 'en';
                    i18n.changeLanguage(value);
                    if (onLanguageChange) {
                        return onLanguageChange(value);
                    }
                    if (path.endsWith(`/${lang}`)) {
                        return gatsby_1.navigate(`/${value}`);
                    }
                    gatsby_1.navigate(path.replace(pathPrefix, '').replace(`/${lang}/`, `/${value}/`));
                } }, t('English')))),
        !showChinaMirror ? null : (react_1.default.createElement("li", null,
            react_1.default.createElement("a", { href: chinaMirrorUrl, onClick: e => {
                    e.preventDefault();
                    exports.redirectToChinaMirror(githubUrl);
                } },
                t('国内镜像'),
                react_1.default.createElement("i", { className: Header_module_less_1.default.export },
                    react_1.default.createElement(external_link_svg_1.default, null))))),
        react_1.default.createElement("li", Object.assign({}, productItemProps),
            react_1.default.createElement("a", null,
                t('所有产品'),
                react_1.default.createElement(antd_1.Icon, { type: "caret-down", className: classnames_1.default(Header_module_less_1.default.arrow, {
                        [Header_module_less_1.default.open]: productMenuVisible,
                    }) })),
            react_1.default.createElement(Products_1.default, { className: Header_module_less_1.default.productsMenu, show: productMenuVisible, rootDomain: rootDomain, language: defaultLanguage })),
        showGithubCorner && (react_1.default.createElement("li", { className: Header_module_less_1.default.githubCorner },
            react_1.default.createElement("a", { href: githubUrl, target: "_blank", rel: "noopener noreferrer" },
                react_1.default.createElement(antd_1.Icon, { type: "github" }))))));
    let defaultLogoLink;
    if (link) {
        defaultLogoLink = link;
    }
    else if (siteUrl === 'https://antv.vision') {
        defaultLogoLink = `/${lang}`;
    }
    else {
        defaultLogoLink = `https://antv.vision`;
    }
    const [logoLink, setLogoLink] = react_1.useState(defaultLogoLink);
    react_1.useEffect(() => {
        if (window.location.host === 'antv.gitee.io') {
            setLogoLink('https://antv.gitee.io');
        }
    }, []);
    return (react_1.default.createElement("header", { className: classnames_1.default(Header_module_less_1.default.header, {
            [Header_module_less_1.default.transparent]: !!transparent && !productMenuVisible,
            [Header_module_less_1.default.isHomePage]: !!isHomePage,
            [Header_module_less_1.default.fixed]: popupMenuVisible,
        }) },
        react_1.default.createElement("div", { className: Header_module_less_1.default.container },
            react_1.default.createElement("div", { className: Header_module_less_1.default.left },
                react_1.default.createElement("h1", null,
                    react_1.default.createElement("a", { href: logoLink }, img)),
                subTitle && (react_1.default.createElement(react_1.default.Fragment, null,
                    react_1.default.createElement("span", { className: Header_module_less_1.default.divider }),
                    react_1.default.createElement("h2", { className: Header_module_less_1.default.subProduceName }, react_1.default.createElement(SubTitleLink, {
                        [SubTitleLink === 'a' ? 'href' : 'to']: typeof subTitleHref === 'undefined'
                            ? `/${lang}`
                            : subTitleHref,
                    }, subTitle)))),
                showSearch && react_1.default.createElement(Search_1.default, null)),
            react_1.default.createElement("nav", { className: Header_module_less_1.default.nav },
                menu,
                menuIcon))));
};
exports.default = Header;
